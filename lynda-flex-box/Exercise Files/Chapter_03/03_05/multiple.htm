<!doctype html>
<html>
<head>
<meta charset="UTF-8">
<title>Aligning multiple lines</title>
<link href="_css/base.css" rel="stylesheet" type="text/css" media="screen">
<style>
body {
	width: 80%;
	margin: 0 auto;
	padding: 2%;
	line-height: 1.6;
}
.flex-container {
	display:-webkit-flex;
	display: -ms-flexbox;
	display: flex;
	margin: 1em 0;
	border: 1px solid #333;
	width: 40%;
	height: 600px;
	-webkit-flex-flow: row wrap;
	-ms-flex-wrap: row wrap;
	flex-flow: row wrap;
	-webkit-justify-content: space-around;
	-ms-flex-pack: justify;
	justify-content:space-around;
}
</style>
</head>
<body>
<header>
<h1>Flexbox First Look</h1>
<p>Welcome to Flexbox First Look! The <a href="http://www.w3.org/TR/css3-flexbox/" title="Flexbox">Flexible Layout Box Model</a> (or <strong>Flexbox</strong> as it is more commonly known) is <em>just one of the many</em> CSS specifications under development by the W3C to address the current shortcomings in layout capabilities. Flexbox is well suited for arranging and aligning elements along a single axis, and creating flexible elements within a defined container. It's not particularly good at handling complex layouts, or controlling elements along multiple axes. As such, it's likely that Flexbox will be used in conjunction with other layout models such as <a href="http://www.w3.org/TR/css3-grid-layout/" title="CSS Grid Layout">CSS Grid Layout</a>. While layout models like Grid Layout will handle overall page organization, Flexbox will be used to control the layout of discreet regions or UI components.</p>
</header>
<article>
<h2>Cross axis alignment for mulitple flex lines</h2>
<p>If you have a multiline flex container, you can control cross axis alignment through the <strong>align-content</strong> property. This property does not effect single line flex containers. Seen here is a combination of the <strong>align-content</strong> and <strong>justify-content</strong> properties.</p>
<section class="flex-container">
<div class="box">
<h3>one</h3>
</div>
<div class="box">
<h3>two</h3>
</div>
<div class="box">
<h3>three</h3>
</div>
<div class="box">
<h3>four</h3>
</div>
<div class="box">
<h3>five</h3>
</div>
<div class="box">
<h3>six</h3>
</div>
<div class="box">
<h3>seven</h3>
</div>
<div class="box">
<h3>eight</h3>
</div>
<div class="box">
<h3>nine</h3>
</div>
</section>
</article>
</body>
</html>
